@Dal_1 = [@aDal.fina @aDal.isol];
@1st_2 = [@RaaWaw @AlefHamzaBelow];
@1st_4 = [@aHeh.isol @aHeh.fina];

// final alef with no hamza above
@Alf_1 = [uni0627.fina_LamAlfFina uni0625.fina_LamAlfFina];
@Alf_2 = [@aAlf.fina @aAlf.fina_KafAlf @aAlf.fina_KafMemAlf
          @aAlf.fina_LamAlfFina @aAlf.fina_LamAlfIsol @aAlf.fina_MemAlfFina];

@Kaf_3 = [@aKaf.init @aKaf.init_KafLam @aGaf.isol];

@Raa_1 = [@RaaWaw @aDal.fina @aDal.isol];

@2nd_4 = [@aMem.init_AboveHaa];

lookup YaaBari3Kern {
  pos @aAyn.init <0 0 440 0>;
  pos @aFaa.init <0 0 710 0>;
  pos @aHeh.init <0 0 400 0>;
  pos @aLam.init <0 0 955 0>;
  pos @aMem.init <0 0 520 0>;
  pos @aSen.init <0 0 150 0>;
  pos @aTaa.init <0 0 150 0>;
  pos uni06BE.init <0 0 400 0>;
} YaaBari3Kern;

feature kern {
  lookupflag IgnoreMarks;
  pos @RaaWaw' <-300 0 -300 0> [@Kaf_3];

  pos @Dal_1'  <-400 0 -400 0> [@Kaf_3];

  // +ve kern so that the tail of raa/waw does not touch the dot of baa
  pos @1st_2' < 170 0  170 0> @aBaaDotBelow;

  // increase advance width for first glyph in 3-letter Baree Yaa ligatures
  pos [@aAyn.init @aFaa.init @aHeh.init @aLam.init
       @aMem.init @aSen.init @aTaa.init uni06BE.init]' lookup YaaBari3Kern
       @aBaa.medi_YaaBari;
} kern;

// we don't want to ignore marks here
feature kern {
  pos @Alf_1' <-250 0 -250 0> @Kaf_3;

  // raa/waw/dal followed by isolated dagger alef followed by madda needs some
  // space to avoid fatha/madda clash
  pos @Raa_1' < 200 0  200 0> uni064E uni0670.isol [uni0653 uni06E4];

  pos [uni0621]' < 200 0  200 0> uni064E uni0670.isol;
} kern;

feature kern {
  lookupflag IgnoreMarks;
  pos @RaaWaw' <80 0 80 0> @aYaa.init;
  pos @RaaWaw' <120 0 120 0> uni061B; // Arabic semicolon
} kern;

feature kern {
  lookupflag IgnoreMarks;
  // kern heh isol/final followed by kaf, does not happen in Arabic but can be
  // seen in Kurdish or Persian using ZWNJ between them.
  pos @1st_4 uni200C [@Kaf_3]' -500;
  // Uniscribe replace ZWNJ with space
  pos @1st_4 space   [@Kaf_3]' -500;
  // some applications might just remove it
  pos @1st_4         [@Kaf_3]' -500;
} kern;

feature kern {
  lookupflag IgnoreMarks;
    pos period.ara' <-300 0 -300 0> [quotedblleft quoteleft];
    pos period' -150 [quotedblright quoteright];
} kern;


// proportional digits
feature kern {
  pos uni0661.prop uni0662.prop -100;
  pos uni0661.prop uni0663.prop -100;
  pos uni0661.prop uni0666.prop -200;
  pos uni0661.prop uni0669.prop -100;

  pos uni0662.prop uni0667.prop  100;
  pos uni0662.prop uni0668.prop  -50;

  pos uni0663.prop uni0667.prop  100;

  pos uni0664.prop uni0661.prop  -50;
  pos uni0664.prop uni0668.prop   50;

  pos uni0666.prop uni0661.prop  -50;

  pos uni0667.prop uni0661.prop  -50;
  pos uni0667.prop uni0668.prop  -50;

  pos uni0668.prop uni0661.prop -100;
  pos uni0668.prop uni0662.prop -100;
  pos uni0668.prop uni0663.prop -100;
  pos uni0668.prop uni0666.prop -100;
  pos uni0668.prop uni0667.prop -100;

  pos uni0669.prop uni0668.prop   50;
  pos uni0669.prop uni0660.prop   50;

  pos uni0660.prop uni0667.prop   50;
  pos uni0660.prop uni0668.prop   50;
} kern;

// generated features for anchor points will be inserted here by build script
{%anchors%}

// With ss05 on, kasra is below shadda, so move the shadda up a bit to
// compensate for the kasra.
feature ss05 {
  pos uni0651' <0 210 0 0> [uni0650.small];
  pos uni0651' <0 350 0 0> [uni064D.small];
} ss05;
